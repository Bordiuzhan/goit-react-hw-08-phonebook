{"version":3,"file":"static/js/284.f327da73.chunk.js","mappings":"iRAGaA,EAAOC,EAAAA,EAAAA,KAAH,4MAUJC,EAAQD,EAAAA,EAAAA,MAAH,8MAULE,GAAQF,EAAAA,EAAAA,GAAOG,EAAAA,EAAPH,CAAH,8CAGLI,GAAMJ,EAAAA,EAAAA,GAAOK,EAAAA,EAAPL,CAAH,sL,UC1BHM,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EAEtBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMC,SAASE,SAAnB,E,6BCKvBC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IACJ,IAAMT,GAAWa,EAAAA,EAAAA,IAAYf,GAEvBgB,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACd,OAAQZ,GACN,IAAK,OACHC,EAAQW,EAAMC,QACd,MACF,IAAK,SACHV,EAAUS,EAAMC,QAChB,MACF,QACE,OAEL,EAeD,OACE,UAAC3B,EAAD,CAAM4B,SAda,SAAAJ,GACnBA,EAAEK,iBADsB,gBAEJpB,GAFI,IAExB,2BAA8B,CAC5B,GAD4B,QAChBK,KAAKgB,gBAAkBhB,EAAKgB,cACtC,OAAOC,EAAAA,OAAAA,QAAA,UAAkBjB,EAAlB,2BAETI,GAASc,EAAAA,EAAAA,IAAW,CAAElB,KAAAA,EAAME,OAAAA,KAC5BD,EAAQ,IACRE,EAAU,IACVc,EAAAA,OAAAA,QAAA,UAAkBjB,EAAlB,aACD,CAVuB,+BAWzB,EAGC,WACE,SAACZ,EAAD,WACE,SAACC,EAAD,CACE8B,MAAM,YACNC,KAAK,QACLC,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRC,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRf,MAAOZ,EACP4B,SAAUnB,OAGd,SAACrB,EAAD,WACE,SAACC,EAAD,CACE8B,MAAM,YACNC,KAAK,QACLC,GAAG,iBACHC,MAAM,SACNC,QAAQ,WACRC,KAAK,MACLxB,KAAK,SACLyB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRf,MAAOV,EACP0B,SAAUnB,OAGd,SAAClB,EAAD,CACEgC,QAAQ,YACRH,KAAK,QACLI,KAAK,SACLK,UAAW7B,IAASE,EAJtB,2BAUL,E,mBCtFY4B,GAAY3C,EAAAA,EAAAA,GAAO4C,EAAAA,EAAP5C,CAAH,0DAIT6C,GAAO7C,EAAAA,EAAAA,GAAO8C,EAAAA,GAAP9C,CAAH,qG,UCJJ+C,EAAe,SAAAxC,GAAK,OAAIA,EAAMyC,MAAV,EAEpBC,GAAqBC,EAAAA,EAAAA,IAChC,CAAC5C,EAAgByC,IACjB,SAACvC,EAAU2C,GACT,IAAMC,EAAmBD,EAAQtB,cACjC,GAAIrB,IAAa,GAGjB,OAAOA,EAASwC,QAAO,SAAAK,GAAO,OAC5BA,EAAQxC,KAAKgB,cAAcyB,SAASF,EADR,GAG/B,I,8BCZUG,EAAOvD,EAAAA,EAAAA,EAAH,sBACJI,GAAMJ,EAAAA,EAAAA,GAAOwD,EAAAA,EAAPxD,CAAH,sB,UCGHyD,EAAkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1BzC,GAAWC,EAAAA,EAAAA,MACXR,GAAYW,EAAAA,EAAAA,IAAYZ,GAM9B,OACE,iCACE,SAACkD,EAAA,EAAD,KACA,UAACJ,EAAD,WACGG,EAAK7C,KADR,KACgB6C,EAAK3C,WAErB,SAAC,EAAD,CAAK6C,KAAK,MAAM,aAAW,SAASC,QAAS,kBAV9BC,EAU+CJ,EAAKxB,QATrEjB,GAAS8C,EAAAA,EAAAA,IAAcD,IADN,IAAAA,CAU8B,EAA7C,SACGpD,GAAY,SAACsD,EAAA,EAAD,CAAkBhC,MAAM,aAAe,SAACiC,EAAA,EAAD,QAI3D,ECrBYC,EAAc,WACzB,IAAMC,GAAQ9C,EAAAA,EAAAA,IAAY4B,GAE1B,OACE,SAACN,EAAD,UACGwB,EAAMC,KAAI,SAAAV,GAAI,OACb,SAACb,EAAD,WACE,SAACY,EAAD,CAAiBC,KAAMA,KADdA,EAAKxB,GADH,KAOpB,ECdYjC,EAAQD,EAAAA,EAAAA,MAAH,oHAMLE,GAAQF,EAAAA,EAAAA,GAAOG,EAAAA,EAAPH,CAAH,yC,UCJLqE,EAAS,WACpB,IAAMpD,GAAWC,EAAAA,EAAAA,MACX8B,GAAS3B,EAAAA,EAAAA,IAAY0B,GAK3B,OACE,SAAC,EAAD,WACE,SAAC,EAAD,CACEZ,MAAM,wBACNH,MAAM,YACNC,KAAK,QACLI,KAAK,OACLZ,MAAOuB,EACPP,SAXe,SAAAlB,GACnBN,GAASqD,EAAAA,EAAAA,GAAc/C,EAAEC,cAAcC,OACxC,KAaF,ECpBc,SAAS8C,IACtB,OACE,iCACE,SAAC5D,EAAD,KACA,SAAC0D,EAAD,KACA,SAACH,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","redux/filter/srlrctors.js","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { Button, TextField } from '@mui/material';\nimport styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border: 1px solid #2a363b;\n  border-radius: 3px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 450px;\n  margin: auto;\n  padding: 20px 0;\n`;\nexport const Label = styled.label`\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: bold;\n`;\nexport const Input = styled(TextField)`\n  color: blueviolet;\n`;\nexport const Btn = styled(Button)`\n  min-width: 130px;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: bold;\n  background: blueviolet;\n  :hover {\n    background: #6f1abd;\n  }\n`;\n","export const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","import { useEffect, useState } from 'react';\nimport { Form, Label, Btn, Input } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact, fetchPhones } from 'redux/contacts/operations';\nimport { Notify } from 'notiflix';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPhones());\n  }, [dispatch]);\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value.trim());\n        break;\n      case 'number':\n        setNumber(value.trim());\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    for (let contact of contacts) {\n      if (contact.name.toLowerCase() === name.toLowerCase()) {\n        return Notify.failure(`${name} is alredy in contacts`);\n      }\n      dispatch(addContact({ name, number }));\n      setName('');\n      setNumber('');\n      Notify.success(`${name} is added`);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Input\n          color=\"secondary\"\n          size=\"small\"\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        <Input\n          color=\"secondary\"\n          size=\"small\"\n          id=\"outlined-basic\"\n          label=\"Number\"\n          variant=\"outlined\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </Label>\n      <Btn\n        variant=\"contained\"\n        size=\"small\"\n        type=\"submit\"\n        disabled={!name || !number}\n      >\n        Add contact\n      </Btn>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\nimport { ListItem, List } from '@mui/material';\n\nexport const ListPhone = styled(List)`\n  width: 450px;\n  margin: auto;\n`;\nexport const Item = styled(ListItem)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisiblePhone = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filters) => {\n    const normalizedFilter = filters.toLowerCase();\n    if (contacts === []) {\n      return;\n    }\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from '@emotion/styled';\nimport { IconButton } from '@mui/material';\n\nexport const Text = styled.p``;\nexport const Btn = styled(IconButton)``;\n","import { Avatar, CircularProgress } from '@mui/material';\nimport { Btn, Text } from './ContactListItem.styled';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactListItem = ({ item }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const deleteData = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <>\n      <Avatar />\n      <Text>\n        {item.name}: {item.number}\n      </Text>\n      <Btn edge=\"end\" aria-label=\"delete\" onClick={() => deleteData(item.id)}>\n        {isLoading ? <CircularProgress color=\"inherit\" /> : <DeleteIcon />}\n      </Btn>\n    </>\n  );\n};\n","import { ListPhone, Item } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisiblePhone } from 'redux/filter/srlrctors';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\n\nexport const ContactList = () => {\n  const items = useSelector(selectVisiblePhone);\n\n  return (\n    <ListPhone>\n      {items.map(item => (\n        <Item key={item.id}>\n          <ContactListItem item={item} />\n        </Item>\n      ))}\n    </ListPhone>\n  );\n};\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 20px 0;\n`;\nexport const Input = styled(TextField)`\n  margin: auto;\n`;\n","import { Input, Label } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/srlrctors';\nimport { setFilterData } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = e => {\n    dispatch(setFilterData(e.currentTarget.value));\n  };\n  return (\n    <Label>\n      <Input\n        label=\"Find contacts by name\"\n        color=\"secondary\"\n        size=\"small\"\n        type=\"text\"\n        value={filter}\n        onChange={changeFilter}\n      ></Input>\n    </Label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\n\nexport default function Contacts() {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Form","styled","Label","Input","TextField","Btn","Button","selectContacts","state","contacts","selectIsLoading","isLoading","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useEffect","fetchPhones","useSelector","handleChange","e","currentTarget","value","trim","onSubmit","preventDefault","toLowerCase","Notify","addContact","color","size","id","label","variant","type","pattern","title","required","onChange","disabled","ListPhone","List","Item","ListItem","selectFilter","filter","selectVisiblePhone","createSelector","filters","normalizedFilter","contact","includes","Text","IconButton","ContactListItem","item","Avatar","edge","onClick","contactId","deleteContact","CircularProgress","Delete","ContactList","items","map","Filter","setFilterData","Contacts"],"sourceRoot":""}